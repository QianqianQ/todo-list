name: CI Pipeline - docker

on:
  push:
    branches:
      - ci-docker
  pull_request:
    branches:
      - ci-docker

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker Buildx for multi-platform builds (optional)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub (if you're pushing images to Docker Hub)
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Build and tag the Docker images
      - name: Build Docker images
        run: |
          docker compose -f docker-compose.yml build

      # Run tests and linting
      - name: Run backend tests
        run: |
          docker compose -f docker-compose.yml run --rm backend pytest
      
      - name: Run backend linting
        run: |
          docker compose -f docker-compose.yml run --rm backend flake8 .

      # - name: Run frontend tests
      #   run: |
      #     docker-compose -f docker-compose.yml run frontend npm run test

      - name: Run frontend linting
        run: |
          docker compose -f docker-compose.yml run --rm frontend npm run lint

      # Push Docker images to Docker Hub (optional)
      # - name: Push Docker images
      #   run: |
      #     docker-compose -f docker-compose.yml push

      # Push frontend image
      # - name: Push frontend Docker image
      #   run: |
      #     docker tag my-frontend:latest my-dockerhub-user/my-frontend:latest
      #     docker push my-dockerhub-user/my-frontend:latest

      # Push backend image
      # - name: Push backend Docker image
      #   run: |
      #     docker tag my-backend:latest my-dockerhub-user/my-backend:latest
      #     docker push my-dockerhub-user/my-backend:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-test  # Wait for the build-and-test job to complete
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     # Check out the repository
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     # Deploy using docker-compose (example for a remote server)
  #     - name: Deploy application
  #       run: |
  #         scp docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/app/
  #         ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd /app && docker-compose pull && docker-compose up -d"